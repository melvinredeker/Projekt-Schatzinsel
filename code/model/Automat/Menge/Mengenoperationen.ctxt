#BlueJ class context
comment0.target=Mengenoperationen
comment0.text=\r\n\ Das\ generische\ Interface\ Mengenoperationen<Inhaltstyp>\ legt\ die\ Methoden\ fest,\r\n\ ueber\ die\ Mengen\ verfuegen\ muessen.\ Der\ Inhaltstyp\ muss\ eine\ Spezialisierung\ eines\ \r\n\ Elements\ sein,\ also\ muss\ der\ konkrete\ Inhaltstyp\ von\ \ der\ Klasse\ Element\ erben.\r\n\ \r\n\ @author\ \ Dennis\ Dierschke\r\n\ @version\ 2021-12-30\r\n
comment1.params=pElement
comment1.target=boolean\ istVorhanden(Element)
comment1.text=\r\n\ Bestimmt,\ ob\ ein\ Element\ mit\ der\ Bezeichnung\ bereits\ in\ der\ Menge\ verwaltet\ wird.\r\n\ \r\n\ @param\ \ \ pElement\ \ \ \ zu\ ueberpruefendes\ Element\r\n\ \r\n\ @return\ \ wahr,\ wenn\ das\ Element\ bereits\ in\ der\ Menge\ enthalten\ ist\r\n
comment10.params=
comment10.target=Menge\ gibKopie()
comment10.text=\r\n\ Erstellt\ eine\ vollstaendige\ Kopie,\ d.h.\ erstellt\ auch\ Kopien\ der\ Inhaltsobjekte.\r\n\ \r\n\ @return\ \ vollstaendige\ Kopie\r\n
comment2.params=
comment2.target=boolean\ istLeer()
comment2.text=\r\n\ Bestimmt,\ ob\ die\ Menge\ leer\ ist.\r\n\ \r\n\ @return\ \ wahr,\ wenn\ leer,\ sonst\ falsch\r\n
comment3.params=
comment3.target=int\ anzahl()
comment3.text=\r\n\ Liefert\ die\ Anzahl\ an\ Elementen,\ die\ in\ der\ Menge\ enthalten\ sind.\r\n\ \r\n\ @return\ \ Anzahl\ an\ Elementen\r\n
comment4.params=pMenge
comment4.target=void\ vereinigen(Menge)
comment4.text=\r\n\ Fuegt\ der\ Menge\ all\ die\ Elemente\ einer\ uebergebenen\ Menge\ hinzu,\ \r\n\ die\ noch\ nicht\ Teil\ der\ Menge\ sind.\r\n\ \r\n\ @param\ \ \ pMenge\ \ \ \ uebergebene\ Menge\r\n
comment5.params=pMenge
comment5.target=Menge\ bestimmeVereinigung(Menge)
comment5.text=\r\n\ Bestimmt\ die\ Vereinigungsmenge\ der\ Menge\ und\ einer\ uebergebenen\ Menge.\r\n\ \r\n\ @param\ \ \ pMenge\ \ \ \ uebergebene\ Menge\r\n\ \r\n\ @return\ \ Vereinigungsmenge\r\n
comment6.params=pMenge
comment6.target=Menge\ bestimmeSchnitt(Menge)
comment6.text=\r\n\ Bestimmt\ die\ Schnittmenge\ der\ Menge\ und\ einer\ uebergebenen\ Menge.\r\n\ \r\n\ @param\ \ \ pMenge\ \ \ \ uebergebene\ Menge\r\n\ \r\n\ @return\ \ Schnittmenge\r\n
comment7.params=pMenge
comment7.target=Menge\ bestimmeSymmetrischeDifferenz(Menge)
comment7.text=\r\n\ Bestimmt\ die\ Symmetrische\ Differenz\ der\ Menge\ und\ einer\ uebergebenen\ Menge.\r\n\ \r\n\ @param\ \ \ pMenge\ \ \ \ uebergebene\ Menge\r\n\ \r\n\ @return\ \ SymmetrischeDifferenz\r\n
comment8.params=pMenge
comment8.target=Menge\ bestimmeDifferenz(Menge)
comment8.text=\r\n\ Bestimmt\ die\ Differenzmenge\ von\ der\ Menge\ und\ einer\ uebergebenen\ Menge\ (Menge\ ohne\ uebergebene\ Menge).\r\n\ \r\n\ @param\ \ \ pMenge\ \ \ \ uebergebene\ Menge\r\n\ \r\n\ @return\ \ Differenzmenge\r\n
comment9.params=
comment9.target=java.lang.String\ gibString()
comment9.text=\r\n\ Gibt\ den\ Inhalt\ der\ Menge\ als\ String\ in\ der\ Form\ "{q0,q1,q2,\ ...,\ qn}"\ zurueck.\r\n\ \r\n\ @return\ \ Inhalt\ der\ Menge\ als\ String\r\n
numComments=11
