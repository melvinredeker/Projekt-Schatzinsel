#BlueJ class context
comment0.target=Algorithmen
comment0.text=\r\n\ Die\ Klasse\ operiert\ auf\ Automaten\ und\ stellt\ verschiedene\ Verfahren\ zur\ Verfuegung.\r\n\ \r\n\ @author\ \ Tristan\ Lippold\r\n\ @version\ 2021-02-15\r\n
comment1.params=pAutomat\ pWort\ pAlsBezeichnung
comment1.target=java.lang.String\ ableiten(Automat,\ java.lang.String,\ boolean)
comment1.text=\r\n\ Leitet\ ein\ Wort\ ab,\ indem\ es\ Zeichen\ fuer\ die\ Zeichen\ die\ Zustandsfolge\ bestimmt.\r\n\ \r\n\ @param\ \ \ pAutomat\ \ \ \ \ \ \ \ \ \ \ \ endlicher\ Automat\r\n\ @param\ \ \ pWort\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Zeichenfolge\r\n\ @param\ \ \ pAlsBezeichnung\ \ \ \ \ true,\ wenn\ Ausgabe\ der\ Bezeichnungen\ erfolgen\ soll\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false,\ wenn\ Ausgabe\ der\ Nummern\ (+\ Praefixe)\ erfolgen\ soll\r\n\ \r\n\ @return\ \ Ableitung(en)\r\n
comment10.params=pE\ pLaengeMax\ pTiefe\ pEingaben
comment10.target=void\ gibAlleEingaben(Alphabet,\ int,\ int,\ Menge.List)
comment2.params=pAutomat\ pWort\ pZustand\ pAbleitung\ pAlsBezeichnung
comment2.target=java.lang.String\ ableiten(Automat,\ java.lang.String,\ Zustand,\ java.lang.String,\ boolean)
comment2.text=\r\n\ Leitet\ ein\ Wort\ ab,\ indem\ es\ Zeichen\ fuer\ die\ Zeichen\ die\ Zustandsfolge\ bestimmt.\r\n\ \r\n\ @param\ \ \ pAutomat\ \ \ \ \ \ \ \ \ \ \ \ endlicher\ Automat\r\n\ @param\ \ \ pWort\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Zeichenfolge\r\n\ @param\ \ \ pZustand\ \ \ \ \ \ \ \ \ \ \ \ Zustand\ ab\ dem\ abgeleitet\ werden\ soll\r\n\ @param\ \ \ pAbleitung\ \ \ \ \ \ \ \ \ \ Ableitung\ fuer\ die\ bisher\ verarbeiteten\ Zeichen\ des\ Wortes\r\n\ @param\ \ \ pAlsBezeichnung\ \ \ \ \ true,\ wenn\ Ausgabe\ der\ Bezeichnungen\ erfolgen\ soll\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ false,\ wenn\ Ausgabe\ der\ Nummern\ (+\ Praefixe)\ erfolgen\ soll\r\n\ \r\n\ @return\ \ Ableitung(en)\r\n
comment3.params=pAutomat\ pWort
comment3.target=boolean\ akzeptiertEingabe(Automat,\ java.lang.String)
comment3.text=\r\n\ Ueberprueft,\ ob\ das\ eingegebene\ Wort\ Element\ der\ vom\ Automaten\ akzeptierten\ Sprache\ ist.\r\n\ \r\n\ @param\ \ \ pAutomat\ \ \ \ endlicher\ Automat\r\n\ @param\ \ \ pWort\ \ \ \ \ \ \ Zeichenfolge\r\n\ \ \r\n\ @return\ \ wahr,\ wenn\ Wort\ Element\ der\ vom\ Automaten\ akzeptierten\ Sprache\ ist\r\n
comment4.params=pAutomat\ pWort
comment4.target=Zustand[]\ gibZustandsFolge(Automat,\ java.lang.String)
comment4.text=\r\n\ Gibt\ die\ Zustandsfolge\ fuer\ das\ eingegebene\ Wort\ als\ Array\ zurueck.\r\n\r\n\ @param\ pAutomat\ \ \ \ \ \ endlicher\ Automat\r\n\ @param\ pWort\ \ \ \ \ \ \ \ \ Zeichenfolge\r\n\r\n\ @return\ \ Zustandsfolge\r\n
comment5.params=pAutomat\ pWort\ pAktuellerZustand\ pZustaende
comment5.target=Zustand[]\ gibZustandsFolge(Automat,\ java.lang.String,\ Zustand,\ Zustand[])
comment5.text=\r\n\ Gibt\ die\ Zustandsfolge\ ab\ dem\ gegebenen\ Zustand\ fuer\ das\ eingegebene\ Wort\ als\ Array\ zurueck.\r\n\r\n\ @param\ pAutomat\ \ \ \ \ \ \ \ \ \ endlicher\ Automat\r\n\ @param\ pWort\ \ \ \ \ \ \ \ \ \ \ \ \ Zeichenfolge\r\n\ @param\ pAktuellerZustand\ Zustand,\ ab\ dem\ Zustandsfolge\ bestimmt\ werden\ soll\r\n\ @param\ pZustaende\ \ \ \ \ \ \ \ Array,\ in\ dem\ die\ Zustandsfolge\ eingetragen\ werden\ soll\r\n\r\n\ @return\ \ Zustandsfolge\r\n
comment6.params=pAutomat\ pWort
comment6.target=boolean\ akzeptiertEingabeRekursiv(Automat,\ java.lang.String)
comment6.text=\r\n\ Gibt\ zurueck,\ ob\ das\ eingegebene\ Wort\ Teil\ der\ Sprache\ des\ Automaten\ ist.\r\n\r\n\ @param\ pAutomat\ \ endlicher\ Automat\r\n\ @param\ pWort\ \ \ \ \ Zeichenfolge\r\n\r\n\ @return\ \ true,\ wenn\ Wort\ Teil\ der\ Sprache\ ist,\ sonst\ false\r\n
comment7.params=pAutomat\ pWort\ pZustand
comment7.target=boolean\ akzeptiertEingabeRekursiv(Automat,\ java.lang.String,\ Zustand)
comment7.text=\r\n\ Gibt\ zurueck,\ ob\ das\ eingegebene\ Wort\ Teil\ der\ Sprache\ des\ Automaten\ ist.\ \r\n\ Dabei\ stellt\ der\ uebergebene\ Zustand\ den\ Startzustand\ dar.\r\n\r\n\ @param\ pAutomat\ \ endlicher\ Automat\r\n\ @param\ pWort\ \ \ \ \ Zeichenfolge\r\n\ @param\ pZustand\ \ Startzustand\r\n\r\n\ @return\ \ true,\ wenn\ Wort\ Teil\ der\ Sprache\ ist,\ sonst\ false\r\n
comment8.params=pNEA
comment8.target=Automat\ konstruiereDEA(Automat)
comment8.text=\r\n\ Erstellt\ einen\ aequivalenten\ deterministischen\ endlichen\ Automaten\ (DEA)\ \r\n\ eines\ nicht-deterministischen\ endlichen\ Automaten\ (NEA)\r\n\ mithilfe\ des\ Verfahren\ der\ Potenzmengenkonstruktion.\r\n\ \r\n\ @param\ \ \ pNEA\ \ \ \ NEA\r\n\ \r\n\ @return\ \ aequivalenter\ DEA\r\n
comment9.params=pDEA
comment9.target=Automat\ konstruiereMIN(Automat)
comment9.text=\r\n\ Minimiert\ einen\ deterministischen\ endlichen\ Automaten\ (DEA)\ \r\n\ mithilfe\ des\ Verfahrens\ der\ Aequivalenzklassenkonstruktion.\r\n\ \r\n\ @param\ \ \ pDEA\ \ \ \ zu\ minimierender\ DEA\r\n\ \r\n\ @return\ \ minimierter\ DEA\r\n
numComments=11
